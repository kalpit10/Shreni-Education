@keyframes slideIn {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.slide-in {
  animation: slideIn 0.5s ease forwards;
}

/* Horizontal Line */
/* At the start of the animation (0% progress), This property translates (moves) the element horizontally by -120% of its own width. 
   Negative values move the element to the left, so -120% means the element will be positioned 120% of its own width to the left of its initial position. */
@keyframes slide {
  0% {
    transform: translateX(-120%);
  }
  /* 50%: At the midpoint of the animation (50% progress), the CSS properties within this block are defined.
     transform: translateX(70%);: This property translates the element horizontally by 70% of its own width. 
     Positive values move the element to the right, so 70% means the element will be positioned 70% of its own width to the right of its initial position. */
  50% {
    transform: translateX(40%);
  }
  /* 100%: At the end of the animation (100% progress), the CSS properties within this block are defined.
     transform: translateX(-120%);: 
     This property translates the element horizontally by -120% of its own width, similar to the initial state. It essentially resets the element's position to its original state. */
  100% {
    transform: translateX(-120%);
  }
}

/* For infinite sliding animation */
.animate-slide {
  animation: slide 1.5s ease-in-out infinite;
}

/* Button styles */
.classy-button {
  position: relative;
  display: inline-block;
  padding: 10px 20px;
  background-color: #ffffff;
  font-weight: bold;
  color: #002df4; /* Default text color */
  border: 1px solid #002df4; /* Default border color */
  border-radius: 2px;
  text-decoration: none;
  overflow: hidden;
  z-index: 1;
  transition: color 2s;
}

/* Before and after pseudo-elements */
.classy-button::before,
.classy-button::after {
  content: "";
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: #020f8d; /* New background color */
  transition: transform 1s ease-in-out;
  z-index: -1;
}

/* Before pseudo-element */
.classy-button::before {
  left: -3px; /* Adjust left position to align with border */
  transform: translateX(-100%);
}

/* After pseudo-element */
.classy-button::after {
  right: -3px; /* Adjust right position to align with border */
  transform: translateX(100%);
}

/* Button hover state for pseudo-elements */
.classy-button:hover::before,
.classy-button:hover::after {
  transform: translateX(0);
}

/* Button hover state */
.classy-button:hover {
  color: #ffffff; /* Hover text color */
  border-color: #002df4; /* Hover border color */
  transition: color 0.8s; /* Transition effect for text color */
}

/* Curriculum Button Design */

.classy-button-cur {
  position: relative;
  display: inline-block;
  padding: 10px 20px;
  background-color: #ffffff;
  font-weight: bold;
  color: #002df4; /* Default text color */
  border: 1px solid #002df4; /* Default border color */
  border-radius: 2px;
  text-decoration: none;
  overflow: hidden;
  z-index: 1;
  transition: color 2s;
}

/* Before and after pseudo-elements */
.classy-button-cur::before,
.classy-button-cur::after {
  content: "";
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: #be0000; /* New background color */
  transition: transform 1s ease-in-out;
  z-index: -1;
}

/* Before pseudo-element */
.classy-button-cur::before {
  left: -3px; /* Adjust left position to align with border */
  transform: translateX(-100%);
}

/* After pseudo-element */
.classy-button-cur::after {
  right: -3px; /* Adjust right position to align with border */
  transform: translateX(100%);
}

/* Button hover state for pseudo-elements */
.classy-button-cur:hover::before,
.classy-button-cur:hover::after {
  transform: translateX(0);
}

/* Button hover state */
.classy-button-cur:hover {
  color: #ffffff; /* Hover text color */
  border-color: #be0000; /* Hover border color */
  transition: color 0.8s; /* Transition effect for text color */
}

.slick-dots li button:before {
  color: white !important; /* Change the color to white */
}

.custom-link {
  text-decoration: none !important;
}

/* UNDERLINE EFFECT */

.hover-underline-animation-home {
  display: inline-block;
  position: relative;
  padding-bottom: 0.5rem;
}

.hover-underline-animation-home::after {
  content: "";
  position: absolute;
  width: 100%;
  transform: scaleX(0);
  height: 2.5px;
  bottom: 0;
  left: 0;
  background-color: #0087ca;
  transform-origin: bottom right;
  transition: transform 0.25s ease-out;
}

.hover-underline-animation-home:hover::after {
  transform: scaleX(1);
  transform-origin: bottom left;
}
